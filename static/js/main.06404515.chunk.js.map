{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovie","query","fetch","then","response","ok","Error","status","statusText","json","FindMovie","onAdd","useState","setQuery","newMovie","setMovie","hasQueryError","setQuerryError","handleQueryChange","a","foundedMovie","htmlFor","value","type","id","placeholder","classNames","onChange","event","target","onClick","disabled","App","setMovies","addMovie","useCallback","some","currMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06404515.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\" data-cy=\"card-image\">\n\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movie-title\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const BASE_URL = 'http://www.omdbapi.com/';\nconst API_KEY = 'ab0cbce';\n\nexport function getMovie(query: string): Promise<Movie> {\n  return fetch(`${BASE_URL}?t=${query}&apikey=${API_KEY}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n}\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\n\ntype Props = {\n  onAdd(newMovie: Movie): void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAdd }) => {\n  const [query, setQuery] = useState('');\n  const [newMovie, setMovie] = useState<Movie | null>(null);\n  const [hasQueryError, setQuerryError] = useState(false);\n\n  const handleQueryChange = async () => {\n    const foundedMovie = await getMovie(query);\n\n    if (foundedMovie?.Error) {\n      setQuerryError(true);\n      setMovie(null);\n    } else {\n      setMovie(foundedMovie);\n      setQuerryError(false);\n    }\n\n    setQuery('');\n  };\n\n  const handleOnAddMovie = () => {\n    if (newMovie !== null) {\n      onAdd(newMovie);\n    }\n\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              value={query}\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input',\n                { 'is-danger': hasQueryError },\n              )}\n              onChange={event => setQuery(event.target.value)}\n            />\n          </div>\n\n          {hasQueryError\n            && (\n              <p className=\"help is-danger\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={handleQueryChange}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={newMovie === null}\n              onClick={handleOnAddMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {newMovie && <MovieCard movie={newMovie} />}\n      </div>\n    </>\n  );\n};\n","import { FC, useCallback, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = useCallback(\n    (newMovie: Movie) => {\n      if (!movies.some(currMovie => currMovie.imdbID === newMovie.imdbID)) {\n        setMovies([...movies, newMovie]);\n      }\n    }, [movies],\n  );\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}